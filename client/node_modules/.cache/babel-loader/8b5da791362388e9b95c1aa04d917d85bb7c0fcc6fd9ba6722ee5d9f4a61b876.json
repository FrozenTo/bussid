{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tomps\\\\Desktop\\\\Kolled\\\\codes\\\\bussiki\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport \"./App.css\";\nimport Combobox from \"react-widgets/Combobox\";\nimport \"react-widgets/styles.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_LINK = process.env.REACT_APP_API;\n// From database API\nconst stopsAPI = `${API_LINK}/api/bus_stops`;\nconst routesAPI = `${API_LINK}/api/bus_routes`;\nconst timesAPI = `${API_LINK}/api/bus_times`;\nconst tripsAPI = `${API_LINK}/api/bus_trips`;\nfunction App() {\n  _s();\n  const [stops, setStops] = useState([]);\n  const [routes, setRoutes] = useState([]);\n  const [times, setTimes] = useState([]);\n  const [trips, setTrips] = useState([]);\n  const [loaded, setLoaded] = useState(false);\n  const fetchData = async () => {\n    const getStopsInfo = await axios.get(stopsAPI);\n    const getRoutesInfo = await axios.get(routesAPI);\n    const getTimesInfo = await axios.get(timesAPI);\n    const getTripsInfo = await axios.get(tripsAPI);\n    axios.all([getStopsInfo, getRoutesInfo, getTimesInfo, getTripsInfo]).then(axios.spread(function () {\n      for (var _len = arguments.length, allData = new Array(_len), _key = 0; _key < _len; _key++) {\n        allData[_key] = arguments[_key];\n      }\n      const stopsData = allData[0].data.bus_stops;\n      const routesData = allData[1].data.bus_routes;\n      const timesData = allData[2].data.bus_times;\n      const tripsData = allData[3].data.bus_trips;\n      setStops(stopsData);\n      setRoutes(routesData);\n      setTimes(timesData);\n      setTrips(tripsData);\n    }));\n    setLoaded(true);\n  };\n  const isInitialMount = useRef(true);\n  useEffect(() => {\n    if (isInitialMount.current) {\n      isInitialMount.current = false;\n      fetchData();\n    } else {\n      getUserLocation();\n    }\n  });\n  let stop_areas = []; // array 1 combobox\n  let stop_names = []; // array 2 combobox\n\n  stops.map(stop => {\n    if (!stop_areas.includes(stop.stop_area) && !stop.stop_area == \"\") stop_areas.push(stop.stop_area);\n  });\n  const [selectedRegion, selectRegionCombo] = useState();\n  const [stopNames, setStopNames] = useState();\n  const selectRegion = region => {\n    selectRegionCombo(region);\n    stops.map(stop => {\n      if (stop.stop_area == region) stop_names.push(`${stop.stop_name} (${stop.stop_code})`);\n    });\n    setStopNames(stop_names.sort());\n  };\n  const [useGEO, setUseGEO] = useState(\"false\"); // boolean\n  const [userRegion, setUserRegion] = useState(\"undefined\");\n  const [closestStop, setClosestStop] = useState(\"undefined\");\n  let distances = [];\n  const getUserLocation = async () => {\n    navigator.geolocation.getCurrentPosition(\n    // why is this so hard...\n\n    async pos => {\n      const userLocation = {\n        lat: pos.coords.latitude,\n        lng: pos.coords.longitude\n      };\n      stops.map(stop => {\n        if (String(stop.stop_lat).slice(0, 3) == String(userLocation.lat).slice(0, 3) && String(stop.stop_lon).slice(0, 5) == String(userLocation.lng).slice(0, 5)) {\n          if (stop.stop_area != null) {\n            setUserRegion(stop.stop_area);\n          }\n        }\n        if (stop.stop_area == userRegion) {\n          const distance = Math.sqrt((userLocation.lat - stop.stop_lat) ** 2 + (userLocation.lng - stop.stop_lon) ** 2);\n          distances.push(distance);\n          distances.sort();\n          if (distances[0] == distance) {\n            setClosestStop(`${stop.stop_name} (${stop.stop_code})`);\n          }\n        }\n      });\n      setUseGEO(true);\n      const userRegionText = document.querySelector(\"#userRegion\");\n      userRegionText.innerHTML = ` ${userRegion}`;\n      const closestStopText = document.querySelector(\"#userClosestStop\");\n      closestStopText.innerHTML = ` ${closestStop}`;\n    }, () => {\n      setUseGEO(false);\n    });\n  };\n  const [shortNames, setShortNames] = useState([]);\n  const handleConfirm = () => {\n    const selectedStop = document.getElementsByName(\"stopNames\")[0].value;\n    let stop_code_si = selectedStop.indexOf(\"(\") + 1;\n    let stop_code_ei = selectedStop.indexOf(\")\");\n    let stop_ids = [];\n    let trip_ids = [];\n    let route_ids = [];\n    let short_names = [];\n    const stop_name = selectedStop.slice(0, stop_code_si - 2);\n    stops.forEach(stop => {\n      if (stop.stop_name == stop_name) {\n        stop_ids.push(stop.stop_id);\n      }\n    });\n    console.log(stop_ids);\n    times.forEach(time => {\n      stop_ids.forEach(stop_id => {\n        if (time.stop_id == stop_id) {\n          trip_ids.push(time.trip_id);\n        }\n      });\n    });\n    console.log(trip_ids);\n    trips.forEach(trip => {\n      trip_ids.forEach(trip_id => {\n        if (trip.trip_id == trip_id) {\n          route_ids.push(trip.route_id);\n        }\n      });\n    });\n    console.log(route_ids);\n    routes.forEach(route => {\n      route_ids.forEach(route_id => {\n        if (route.route_id == route_id) {\n          if (!short_names.includes(route.route_short_name)) short_names.push(route.route_short_name);\n          short_names.sort();\n        }\n      });\n    });\n    setShortNames(short_names);\n\n    // CODE\n    console.log(shortNames);\n    const bus_ids = document.querySelector(\".bus_ids\");\n    while (bus_ids.lastElementChild) {\n      bus_ids.removeChild(bus_ids.lastElementChild);\n    }\n    shortNames.map(name => {\n      const id_elem = document.createElement(\"button\");\n      id_elem.className = \"busButton\";\n      id_elem.key = name;\n      id_elem.innerHTML = name;\n      bus_ids.appendChild(id_elem);\n    });\n  };\n  // WEB PAGE RENDER\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spacergrid grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 13\n    }, this), useGEO && loaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"combobox-widgets\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-one\",\n        children: /*#__PURE__*/_jsxDEV(Combobox, {\n          name: \"regionCombo\",\n          placeholder: \"Valige regioon\",\n          data: stop_areas.sort(),\n          autoSelectMatches: true,\n          onToggle: selectedRegion => selectRegion(selectedRegion),\n          onSelect: selectedRegion => selectRegion(selectedRegion)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"widget-two\",\n        children: [/*#__PURE__*/_jsxDEV(Combobox, {\n          name: \"stopNames\",\n          data: stopNames,\n          placeholder: \"Select stop\",\n          autoSelectMatches: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleConfirm,\n          className: \"submit\",\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"radio-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"radio-btn\",\n          type: \"radio\",\n          value: \"time\",\n          name: \"option\",\n          defaultChecked: true,\n          hidden: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 25\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userLocationDiv\",\n        children: [\"Teie praegune asukoht on:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"userRegion\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 25\n        }, this), \"L\\xE4him peatus on:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"userClosestStop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avialableBusses\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 25\n        }, this), \"Bussid:\", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bus_ids\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notGrantedDiv\",\n      children: [loaded ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 39\n      }, this), useGEO ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"notGranted\",\n        children: \"You have to grant access to use location!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 200,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"WHep0KIooMZaHeZ9cCcTkTFlrJQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["axios","React","useEffect","useRef","useState","Combobox","API_LINK","process","env","REACT_APP_API","stopsAPI","routesAPI","timesAPI","tripsAPI","App","stops","setStops","routes","setRoutes","times","setTimes","trips","setTrips","loaded","setLoaded","fetchData","getStopsInfo","get","getRoutesInfo","getTimesInfo","getTripsInfo","all","then","spread","allData","stopsData","data","bus_stops","routesData","bus_routes","timesData","bus_times","tripsData","bus_trips","isInitialMount","current","getUserLocation","stop_areas","stop_names","map","stop","includes","stop_area","push","selectedRegion","selectRegionCombo","stopNames","setStopNames","selectRegion","region","stop_name","stop_code","sort","useGEO","setUseGEO","userRegion","setUserRegion","closestStop","setClosestStop","distances","navigator","geolocation","getCurrentPosition","pos","userLocation","lat","coords","latitude","lng","longitude","String","stop_lat","slice","stop_lon","distance","Math","sqrt","userRegionText","document","querySelector","innerHTML","closestStopText","shortNames","setShortNames","handleConfirm","selectedStop","getElementsByName","value","stop_code_si","indexOf","stop_code_ei","stop_ids","trip_ids","route_ids","short_names","forEach","stop_id","console","log","time","trip_id","trip","route_id","route","route_short_name","bus_ids","lastElementChild","removeChild","name","id_elem","createElement","className","key","appendChild"],"sources":["C:/Users/tomps/Desktop/Kolled/codes/bussiki/client/src/App.js"],"sourcesContent":["import axios from \"axios\";\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Combobox from \"react-widgets/Combobox\";\r\nimport \"react-widgets/styles.css\";\r\n\r\n\r\nconst API_LINK = process.env.REACT_APP_API;\r\n// From database API\r\nconst stopsAPI = `${API_LINK}/api/bus_stops`;\r\nconst routesAPI = `${API_LINK}/api/bus_routes`;\r\nconst timesAPI = `${API_LINK}/api/bus_times`;\r\nconst tripsAPI = `${API_LINK}/api/bus_trips`;\r\n\r\nfunction App() {\r\n\r\n    const [stops, setStops] = useState([]);\r\n    const [routes, setRoutes] = useState([]);\r\n    const [times, setTimes] = useState([]);\r\n    const [trips, setTrips] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n\r\n    const fetchData = async () => {\r\n\r\n        const getStopsInfo = await axios.get(stopsAPI);\r\n        const getRoutesInfo = await axios.get(routesAPI);\r\n        const getTimesInfo = await axios.get(timesAPI);\r\n        const getTripsInfo = await axios.get(tripsAPI);\r\n        axios\r\n\r\n            .all([getStopsInfo, getRoutesInfo, getTimesInfo, getTripsInfo])     \r\n            .then(\r\n                axios.spread((...allData) => {\r\n                    const stopsData = allData[0].data.bus_stops;\r\n                    const routesData = allData[1].data.bus_routes;\r\n                    const timesData = allData[2].data.bus_times;\r\n                    const tripsData = allData[3].data.bus_trips;\r\n\r\n                    setStops(stopsData);\r\n                    setRoutes(routesData);\r\n                    setTimes(timesData);\r\n                    setTrips(tripsData);\r\n                })\r\n            );\r\n\r\n        setLoaded(true);\r\n    };\r\n\r\n    const isInitialMount = useRef(true);\r\n    useEffect(() => {\r\n\r\n        if (isInitialMount.current) {\r\n            isInitialMount.current = false;\r\n            fetchData();\r\n        } \r\n        else {\r\n            getUserLocation();\r\n            \r\n        }\r\n    });\r\n\r\n    let stop_areas = []; // array 1 combobox\r\n    let stop_names = []; // array 2 combobox\r\n\r\n    stops.map((stop) => {\r\n\r\n        if (!stop_areas.includes(stop.stop_area) && !stop.stop_area == \"\")\r\n            stop_areas.push(stop.stop_area);\r\n    });\r\n\r\n    const [selectedRegion, selectRegionCombo] = useState();\r\n    const [stopNames, setStopNames] = useState();\r\n    const selectRegion = (region) => {\r\n        selectRegionCombo(region);\r\n        stops.map((stop) => {\r\n            if (stop.stop_area == region)\r\n                stop_names.push(`${stop.stop_name} (${stop.stop_code})`);\r\n        });\r\n\r\n        setStopNames(stop_names.sort());\r\n    };\r\n\r\n    const [useGEO, setUseGEO] = useState(\"false\"); // boolean\r\n    const [userRegion, setUserRegion] = useState(\"undefined\");\r\n    const [closestStop, setClosestStop] = useState(\"undefined\");\r\n    let distances = [];\r\n\r\n    const getUserLocation = async () => {\r\n\r\n        navigator.geolocation.getCurrentPosition( // why is this so hard...\r\n\r\n            async (pos) => {\r\n                \r\n                const userLocation = {\r\n                    lat: pos.coords.latitude,\r\n                    lng: pos.coords.longitude,\r\n                };\r\n                \r\n                stops.map((stop) => {\r\n                    if (\r\n                        String(stop.stop_lat).slice(0, 3) ==\r\n                            String(userLocation.lat).slice(0, 3) &&\r\n                        String(stop.stop_lon).slice(0, 5) ==\r\n                            String(userLocation.lng).slice(0, 5)\r\n                    ) {\r\n                        if (stop.stop_area != null) {\r\n                            setUserRegion(stop.stop_area);\r\n                        }\r\n                    }\r\n                    if (stop.stop_area == userRegion) {\r\n                        const distance = Math.sqrt(\r\n                            (userLocation.lat - stop.stop_lat) ** 2 +\r\n                                (userLocation.lng - stop.stop_lon) ** 2\r\n                        );\r\n                        distances.push(distance);\r\n                        distances.sort();\r\n                        if (distances[0] == distance) {\r\n                            setClosestStop(\r\n                                `${stop.stop_name} (${stop.stop_code})`\r\n                            );\r\n                        }\r\n                    }\r\n                });\r\n                \r\n                setUseGEO(true);\r\n                const userRegionText = document.querySelector(\"#userRegion\");\r\n                userRegionText.innerHTML = ` ${userRegion}`;\r\n                const closestStopText =\r\n                    document.querySelector(\"#userClosestStop\");\r\n                closestStopText.innerHTML = ` ${closestStop}`;\r\n            },\r\n            () => {\r\n                setUseGEO(false); \r\n            }\r\n        );\r\n    };\r\n\r\n    const [shortNames, setShortNames] = useState([]);\r\n    const handleConfirm = () => {\r\n        const selectedStop = document.getElementsByName(\"stopNames\")[0].value;\r\n        let stop_code_si = selectedStop.indexOf(\"(\") + 1;\r\n        let stop_code_ei = selectedStop.indexOf(\")\");\r\n        let stop_ids = [];\r\n        let trip_ids = [];\r\n        let route_ids = [];\r\n        let short_names = [];\r\n        const stop_name = selectedStop.slice(0, stop_code_si - 2);\r\n        stops.forEach((stop) => {\r\n            if (stop.stop_name == stop_name) {\r\n                stop_ids.push(stop.stop_id);\r\n            }\r\n        });\r\n\r\n        console.log(stop_ids);\r\n        times.forEach((time) => {\r\n            stop_ids.forEach((stop_id) => {\r\n                if (time.stop_id == stop_id) {\r\n                    trip_ids.push(time.trip_id);\r\n                }\r\n            });\r\n        });\r\n\r\n        console.log(trip_ids);\r\n        trips.forEach((trip) => {\r\n            trip_ids.forEach((trip_id) => {\r\n                if (trip.trip_id == trip_id) {\r\n                    route_ids.push(trip.route_id);\r\n                }\r\n            });\r\n        });\r\n        console.log(route_ids);\r\n        routes.forEach((route) => {\r\n            route_ids.forEach((route_id) => {\r\n                if (route.route_id == route_id) {\r\n                    if (!short_names.includes(route.route_short_name))\r\n                        short_names.push(route.route_short_name);\r\n                    short_names.sort();\r\n                }\r\n            });\r\n        });\r\n        setShortNames(short_names);\r\n        \r\n        \r\n        // CODE\r\n        console.log(shortNames);\r\n        const bus_ids = document.querySelector(\".bus_ids\");\r\n        while (bus_ids.lastElementChild) {\r\n            bus_ids.removeChild(bus_ids.lastElementChild);\r\n        }\r\n        shortNames.map((name) => {\r\n            const id_elem = document.createElement(\"button\");\r\n            id_elem.className = \"busButton\";\r\n            id_elem.key = name;\r\n            id_elem.innerHTML = name;\r\n            bus_ids.appendChild(id_elem);\r\n        });\r\n    };\r\n    // WEB PAGE RENDER\r\n    return (\r\n        <div className=\"App\">\r\n            <div className=\"spacergrid grid\"></div>\r\n            {useGEO && loaded ? (\r\n                <div className=\"combobox-widgets\">\r\n                    <div className=\"widget-one\">\r\n                        <Combobox\r\n                            name=\"regionCombo\"\r\n                            placeholder=\"Valige regioon\"\r\n                            data={stop_areas.sort()}\r\n                            autoSelectMatches\r\n                            onToggle={(selectedRegion) =>\r\n                                selectRegion(selectedRegion)\r\n                            }\r\n                            onSelect={(selectedRegion) =>\r\n                                selectRegion(selectedRegion)\r\n                            }\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"widget-two\">\r\n                        <Combobox\r\n                            name=\"stopNames\"\r\n                            data={stopNames}\r\n                            placeholder=\"Select stop\"\r\n                            autoSelectMatches\r\n                        />\r\n                        <button onClick={handleConfirm} className=\"submit\">\r\n                            Confirm\r\n                        </button>\r\n                    </div>\r\n\r\n                    <div className=\"radio-buttons\">\r\n                        <input\r\n                            className=\"radio-btn\"\r\n                            type=\"radio\"\r\n                            value=\"time\"\r\n                            name=\"option\"\r\n                            defaultChecked\r\n                            hidden\r\n                        />{\" \"}\r\n                        \r\n                    </div>\r\n\r\n                    <div className=\"userLocationDiv\">\r\n                        Teie praegune asukoht on:\r\n                        <span id=\"userRegion\"></span>\r\n                        <br />\r\n                        Lähim peatus on:\r\n                        <span id=\"userClosestStop\"></span>\r\n                    </div>\r\n\r\n                    <div className=\"avialableBusses\">\r\n                        <br></br>\r\n                        Bussid:\r\n                        <div className=\"bus_ids\"></div>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            ): \r\n            (\r\n                <div className=\"notGrantedDiv\">\r\n                    {loaded ? <></> : <h1>Loading...</h1>}\r\n                    {useGEO ? (\r\n                        <></>\r\n                    ) : (\r\n                        <h1 className=\"notGranted\">\r\n                            You have to grant access to use location!\r\n                        </h1>\r\n                    )}\r\n                </div>\r\n            )\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}